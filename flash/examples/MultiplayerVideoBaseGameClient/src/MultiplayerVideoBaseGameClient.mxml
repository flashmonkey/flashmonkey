<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute"
	width="640"
	height="480"
	applicationComplete="onApplicationComplete()">
	
	<mx:Script>
		<![CDATA[
			import org.flashmonkey.flash.utils.input.SimpleInput;
			import org.flashmonkey.flash.api.IInput;
			import org.flashmonkey.flash.utils.keys.KeyDefinitions;
			import org.flashmonkey.flash.api.connection.messages.IMessage;
			import org.flashmonkey.flash.utils.input.events.UserInputEvent;
			import com.pblabs.engine.PBE;
			import org.flashmonkey.flash.utils.input.BasicKeyboardInput;
			import org.flashmonkey.flash.utils.input.AbstractUserInput;
			import org.flashmonkey.flash.pv3d.game.state.PV3DGameState;
			import org.flashmonkey.flash.core.game.state.IGameState;
			import org.flashmonkey.flash.api.IState;
			import org.flashmonkey.flash.core.game.AbstractGame;
			import org.flashmonkey.flash.core.game.IGame;
			import com.joeberkovitz.moccasin.service.IOperation;
			import org.flashmonkey.flash.connection.client.BasicClient;
			import org.flashmonkey.flash.pv3d.game.MultiplayerVideoDisplay;
			
			private var _client:BasicClient;
			
			private function onApplicationComplete():void 
			{
				PBE.startup(this);
				
				_client = new BasicClient();
				_client.handshake.addClassToRegister(MultiplayerVideoInputMessage);
				var connection:IOperation = _client.connect("rtmp://localhost/MultiplayerVideoBaseGame", ["flashmonkey","password"]);
				connection.addEventListener(Event.COMPLETE, onConnectionEstablished);
				connection.execute();
				
				var game:IGame = new AbstractGame();
				var state:IGameState = new PV3DGameState("Multiplayer Video", true);
				var display:MultiplayerVideoDisplay = new MultiplayerVideoDisplay(_client.connection, "xuggle_stream");
				display.video.height = 480;
				display.video.width = 640;
				rawChildren.addChild(display.video);
				state.display = display;
			}
			
			private function onConnectionEstablished(e:Event):void 
			{
				trace("connection established");
				
				var netStream:NetStream = new NetStream(NetConnection(_client.connection));
				netStream.attachCamera(Camera.getCamera());

				netStream.publish("stream");
				
				//stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
				//stage.addEventListener(KeyboardEvent.KEY_UP, onKeyUp);
			}
			
			private function onKeyDown(e:KeyboardEvent):void 
			{
				var input:IInput = new SimpleInput();
				
				switch (e.keyCode)
				{
					case KeyDefinitions.W:
						input.moveForward = true;
						break;
						
					case KeyDefinitions.S:
						input.moveBackward = true;
						break;
						
					case KeyDefinitions.A:
						input.yawNegative = true;
						break;
						
					case KeyDefinitions.D:
						input.yawPositive = true;
						break;
						
					default:
						break;
				}
				
				onInputChanged(input);
			}
			
			private function onKeyUp(e:KeyboardEvent):void
			{
				var input:IInput = new SimpleInput();
				
				switch (e.keyCode)
				{
					case KeyDefinitions.W:
						input.moveForward = false;
						break;
						
					case KeyDefinitions.S:
						input.moveBackward = false;
						break;
						
					case KeyDefinitions.A:
						input.yawNegative = false;
						break;
						
					case KeyDefinitions.D:
						input.yawPositive = false;
						break;
						
					default:
						break;
				}
				
				onInputChanged(input);
			}
			
			private function onInputChanged(input:IInput):void 
			{
				var message:MultiplayerVideoInputMessage = new MultiplayerVideoInputMessage();
				message.input = input;
				trace("SEnding input");
				_client.sendToServer(message).execute();
			}
			
		]]>
	</mx:Script>

</mx:Application>