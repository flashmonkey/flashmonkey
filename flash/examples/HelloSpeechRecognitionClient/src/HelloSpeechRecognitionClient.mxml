<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
	applicationComplete="onApplicationComplete();">

	<mx:Script>
	    <![CDATA[
	    	import org.flashmonkey.flash.api.connection.messages.IMessage;
	    	import com.joeberkovitz.moccasin.service.IOperation;
	    	import org.flashmonkey.flash.connection.client.BasicClient;
	    	import org.flashmonkey.flash.api.connection.IClient;
	    	import mx.logging.Log;
	    	import mx.logging.ILogger;
	    import flash.media.Microphone;
	    import flash.events.ActivityEvent;
	    import flash.events.Event;
	    import flash.events.StatusEvent;
	
		  private static const logger:ILogger = Log.getLogger("Main");
	
	      public var mic:Microphone;
	      
	      private var micActive:Boolean = false;
	      
	      private var netStream:NetStream;
	     
	     private var _count:int = 0;
	     
	     private var _currentStream:String = "stream";
	     
	     private var _client:IClient;
	      
	      private function onApplicationComplete():void 
		  {
			  _client = new BasicClient();
			  _client.handshake.addClassToRegister(SpeechRecognitionMessage);
			  var connectionOperation:IOperation = _client.connect("rtmp://localhost/HelloSpeechRecognition", ["flashmonkey", "password"]);
			  connectionOperation.addEventListener(Event.COMPLETE, onConnectionComplete);
			  connectionOperation.execute();
		 }
		
		  private function onConnectionComplete(e:Event):void 
		  {
			  createNetStream();
	      	  createMic();
		  }
	      
	      public function createNetStream():void 
	      {
	      	netStream = new NetStream(NetConnection(_client.connection));
	      	netStream.attachAudio(mic);
	      }
	
	      public function createMic():void
	      {
	      	var deviceArray:Array = Microphone.names;

	        mic = Microphone.getMicrophone(0);

	        mic.gain = 60;
			mic.rate = 11;
			mic.setUseEchoSuppression(true);
			mic.setLoopBack(true);
			mic.setSilenceLevel(5, 1000);

	        mic.addEventListener(ActivityEvent.ACTIVITY, activity);
	        
	        var micDetails:String = "Sound input device name: " + mic.name + '\n';
			micDetails += "Gain: " + mic.gain + '\n';
			micDetails += "Rate: " + mic.rate + " kHz" + '\n';
			micDetails += "Muted: " + mic.muted + '\n';
			micDetails += "Silence level: " + mic.silenceLevel + '\n';
			micDetails += "Silence timeout: " + mic.silenceTimeout + '\n';
			micDetails += "Echo suppression: " + mic.useEchoSuppression + '\n';
	      }
	      
	      public function setClientID(id:String):void 
	      {
	      	
	      }
	
	      private function activity(event:ActivityEvent):void
	      {
			if (event.activating)
			{
				netStream.attachAudio(mic);
				_currentStream = "speech" + _count++;
				netStream.publish(_currentStream, "record");
	        	addEventListener(Event.ENTER_FRAME, showMicLevel);
	        	
	  		}
	  		else
	  		{
	  			netStream.pause();

	  			var message:IMessage = new SpeechRecognitionMessage(_currentStream);
	  			message.addEventListener(Event.COMPLETE, onSpeechRecognitionComplete);
	  			message.write(_client.connection);
	  			removeEventListener(Event.ENTER_FRAME, showMicLevel);
	  		}
	      }
	      
	      public function onSpeechRecognitionComplete(e:Event):void 
	      {
	      	var message:SpeechRecognitionMessage = SpeechRecognitionMessage(e.target);

	      	output(message.bestResult);
	      }
	      
	      public function onSpeechFault(o:Object):void 
	      {
	      	
	      }
	      
	      private function output(msg:Object):void 
	      {
	      	var s:String = outputText.text;
	      	
	      	outputText.text = String(msg) + "\n" + s;
	      }
	
	      private function showMicLevel(event:Event):void
	      {
	        level.graphics.clear();
	        level.graphics.beginFill(0xccccff, 1);
	        level.graphics.drawRect(0, 0, (mic.activityLevel * 30), 100);
	        level.graphics.endFill();
	      }
	
	    ]]>
	</mx:Script>

	<mx:MenuBar/>
	<mx:Canvas width="300" height="50" id="level"/>
	<mx:Text x="95" y="83" width="362" id="outputText" height="346"/>

</mx:Application>